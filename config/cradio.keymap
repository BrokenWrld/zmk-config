/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define base_l 0
#define layer_1 1
#define layer_2 2
#define layer_3 3
#define layer_4 4
#define layer_5 5
#define layer_6 6
#define layer_7 7




&lt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
    };

        keymap {
                compatible = "zmk,keymap";

       		default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 						&kp Y &kp U  &kp I    &kp O   &kp P 
		&mt LSFT A &lt layer_5 S &lt layer_1 D &lt layer_3 F &kp G 		&kp H &lt layer_4 J &lt layer_2 K &lt layer_6 L &mt LSFT SEMICOLON
		&kp Z &mt LCTRL X &mt LALT C &kp V &kp B				&kp N &kp M  &mt LALT COMMA &mt LCTRL DOT &kp SLASH
          				&kp LGUI &kp BACKSPACE  			&lt layer_7 SPC &none 
		>;
		};

       		layer_1 {
		bindings = <
		&trans &trans &trans &trans &trans		 			&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &trans
		&trans &trans &trans &trans &trans 					&trans &trans &trans &trans &trans
		&trans &trans &trans &trans &trans 					&trans &trans &trans &trans &trans
					    &bootloader &trans  			&trans &bt BT_CLR 
		>;
		};

		layer_2 {
		bindings = <
		&trans &trans &kp PG_UP &trans &trans    				&trans &trans &trans &trans &trans 
		&kp LEFT &kp UP &kp DOWN &kp RIGHT &trans				&trans &kp LGUI &trans &trans &trans
		&trans &kp HOME &kp PG_DN &kp END &trans				&trans &trans &trans &trans &trans
		&trans &trans								&trans &trans
		>;
		};	

		tri_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &trans
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &trans &trans  					&trans &trans 
		>;
		};	

	};
};
